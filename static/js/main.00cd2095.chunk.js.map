{"version":3,"sources":["context/AppReducer.js","context/GlobalState.js","components/AddTransaction.js","components/Balance.js","components/Header.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","App.js","reportWebVitals.js","index.js"],"names":["state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","AddTransaction","useState","text","setText","amount","setAmount","useContext","onSubmit","e","preventDefault","newTransaction","Math","floor","random","className","htmlFor","onChange","target","placeholder","Balance","total","map","reduce","acc","item","toFixed","Header","IncomeExpenses","amounts","income","expense","Transaction","sign","abs","onClick","TransactionList","props","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.00cd2095.chunk.js","sourcesContent":["// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case 'DELETE_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: state.transactions.filter(transaction => transaction.id !==\r\n                    action.payload)\r\n            }\r\n        case 'ADD_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: [action.payload, ...state.transactions]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { createContext, useReducer } from 'react';\r\nimport AppReducer from './AppReducer';\r\n\r\n// Initial state\r\nconst initialState = {\r\n    transactions: []\r\n}\r\n\r\n// Create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// Provider component\r\n\r\nexport const GlobalProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n    // Actions\r\n\r\n    function deleteTransaction(id) {\r\n        dispatch({\r\n            type: 'DELETE_TRANSACTION',\r\n            payload: id\r\n        })\r\n    }\r\n\r\n    function addTransaction(transaction) {\r\n        dispatch({\r\n            type: 'ADD_TRANSACTION',\r\n            payload: transaction\r\n        })\r\n    }\r\n    return (<GlobalContext.Provider value={{\r\n        transactions: state.transactions,\r\n        deleteTransaction,\r\n        addTransaction\r\n    }}>\r\n        {children}\r\n    </GlobalContext.Provider>)\r\n}","import React, { useState, useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const AddTransaction = () => {\r\n\r\n    const [text, setText] = useState('');\r\n    const [amount, setAmount] = useState(0);\r\n\r\n    const { addTransaction } = useContext(GlobalContext);\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const newTransaction = {\r\n            id: Math.floor(Math.random() * 100000000),\r\n            text,\r\n            amount: +amount\r\n        }\r\n\r\n        addTransaction(newTransaction);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3>Add new transaction</h3>\r\n            <form onSubmit={onSubmit}>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"text\">Text</label>\r\n                    <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} placeholder=\"Enter text...\" />\r\n                </div>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"amount\">\r\n                        Amount<br />\r\n                        (negative - expense, positive - income)\r\n                    </label>\r\n                    <input type=\"number\" value={amount} onChange={(e) => setAmount(e.target.value)} placeholder=\"Enter amount...\" />\r\n                </div>\r\n                <button className=\"btn\">Add transaction</button>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\n\r\nexport const Balance = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n\r\n    const amounts = transactions.map(transaction => transaction.amount)\r\n    const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2)\r\n\r\n    return (\r\n        <>\r\n            <h4>Your balance</h4>\r\n            <h1>€{total}</h1>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div>\r\n        <h2>\r\n            Budget tracker\r\n        </h2>\r\n        <h5>\r\n            Using React\r\n        </h5>\r\n        </div>\r\n        \r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const IncomeExpenses = () => {\r\n    const { transactions } = useContext(GlobalContext)\r\n\r\n    const amounts = transactions.map(transaction => transaction.amount)\r\n\r\n    const income = amounts\r\n        .filter(item => item > 0)\r\n        .reduce((acc, item) => (acc += item), 0)\r\n        .toFixed(2)\r\n\r\n    const expense = (\r\n        amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) * -1\r\n    ).toFixed(2)\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"inc-exp-container\">\r\n                <div>\r\n                    <h4>Income</h4>\r\n                    <p className=\"money plus\">{income}</p>\r\n                </div>\r\n                <div>\r\n                    <h4>Expense</h4>\r\n                    <p className=\"money minus\">{expense}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const Transaction = ({ transaction }) => {\r\n\r\n    const { deleteTransaction } = useContext(GlobalContext);\r\n\r\n    const sign = transaction.amount < 0 ? '-' : '+';\r\n\r\n    return (\r\n        <li className={transaction.amount < 0 ? 'minus' : 'plus'}>\r\n            {transaction.text}<span>{sign}€{Math.abs(transaction.amount)}</span><button onClick={() => deleteTransaction(transaction.id)} className=\"delete-btn\">x</button>\r\n        </li>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState'\r\nimport { Transaction } from './Transaction';\r\n\r\nexport const TransactionList = (props) => {\r\n    const { transactions } = useContext(GlobalContext);\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h3>History</h3>\r\n            <ul className=\"list\">\r\n                {transactions.map(transaction => (<Transaction transaction={transaction} />))}\r\n\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n","\nimport './App.css';\nimport { AddTransaction } from './components/AddTransaction';\nimport { Balance } from './components/Balance';\nimport { Header } from './components/Header';\nimport { IncomeExpenses } from './components/IncomeExpenses';\nimport { TransactionList } from './components/TransactionList';\nimport { GlobalProvider } from './context/GlobalState';\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}